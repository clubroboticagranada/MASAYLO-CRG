{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MASAYLO - CRG \u00b6 MASAYLO-CRG es un robot creado a partir de la idea de Antonio G\u00f3mez ( https://github.com/agomezgar/masaylo ) del que se van a desarrollar las tres versiones que se exponen a continuaci\u00f3n MASAYLO-CRG-UNO \u00b6 Esta versi\u00f3n, basada en la placa Keyestudio UNO est\u00e1 pensada para que el alumnado de los \u00faltimos cursos de primaria y los del primer ciclo de ESO trabajen los temas STEAM. En la imagen siguiente vemos el aspecto que presenta el robot MASAYLO-CRG-UNO en fase de dise\u00f1o. La programaci\u00f3n de este modelo la podemos realizar a partir del IDE de Arduino (instalando la librer\u00eda correspondiente) o a partir del entorno gr\u00e1fico MASAYLOBLOCKLY. Aspecto general de MASAYLO-CRG-UNO MASAYLO-CRG-NANO \u00b6 Se trata de un modelo totalmente similar al anterior pero que en esta ocasi\u00f3n va a utilizar una placa tipo Arduino Nano con una shield que permite tambi\u00e9n disponer de pines de conexionado r\u00e1pido. En la imagen de la izquierda vemos la placa y en la de la derecha la shield. El aspecto del robot una vez montado es totalmente similar al de la imagen anterior con la salvedad del cambio de placa. Aspecto placa Nano Aspecto de la shield para placa Nano MASAYLO-CRG-IoT \u00b6 En este caso el modelo se implementa a partir de una placa Node MCU ESP32 con shield que incluye los drivers para motores. Este modelo se dirige a los \u00faltimos cursos de ESO, bachillerato y Ciclos Formativos y su principal objetivo, sin dejar atr\u00e1s la sencillez del robot, es trabajar, adem\u00e1s de los temas STEAM, el Internet Of Thing (IoT) o internet de las cosas. B\u00e1sicamente el robot va dotado de conexi\u00f3n WiFi con todo lo que ello conlleva. La idea principal es poder programarlo a partir de un entorno de programaci\u00f3n por bloques, poder desarrollar APPs para m\u00f3viles o tablets para su control a partir de un entorno gr\u00e1fico como Blocky, montando nuestro propio servidor para tal fin. Otro objetivo de este robot es poder realizar colaboraciones a distancia consistentes en, por ejemplo, ejercer el control de un robot situado en cualquier parte del mundo desde el lugar en el que el alumnado est\u00e1 trabajando con la APP. En la imagen siguiente a la izquierda vemos el aspecto de la placa ESP32 y a la derecha el de la shield. El aspecto del robot una vez montado es totalmente similar al montado para la versi\u00f3n UNO con la salvedad del cambio de placa y que el driver de motores est\u00e1 integrado en la shield. Aspecto placa Node MCU ESP32 de 30 pines Aspecto de la shield para placa ESP32 El prop\u00f3sito principal es que sea un robot sencillo de imprimir y de construir y que pueda servir para iniciar en el tema STEAM al alumnado desde los \u00faltimos cursos de educaci\u00f3n primaria hasta bachillerato y ciclos formativos pasando por las distintas etapas de la ESO. Se ha pretendido que los dise\u00f1os 3D sean f\u00e1cilmente imprimibles, sin necesidad de soportes y aconsejamos una altura de capa de 0.2mm. Se ha procurado que los tiempos de impresi\u00f3n sean lo m\u00e1s cortos posible pero al mismo tiempo vers\u00e1tiles para las posibles diferencias entre las distintas placas a utilizar. En el apartado de descripci\u00f3n del hardware se pondr\u00e1n algunos enlaces recomendados para adquisici\u00f3n del material aunque, como no pod\u00eda ser de otra manera, cada quien lo puede adquirir donde mejor le parezca. Cualquiera de los modelos puede ser utilizado para otra etapa formativa u objetivo y lo podremos adaptar a nuestras necesidades, siendo esto posible porque se suministran los archivos fuente de dise\u00f1o y programaci\u00f3n y para ello solamente tenemos que cumplir con los requisitos establecidos en las licencias .","title":"Introducci\u00f3n"},{"location":"#masaylo-crg","text":"MASAYLO-CRG es un robot creado a partir de la idea de Antonio G\u00f3mez ( https://github.com/agomezgar/masaylo ) del que se van a desarrollar las tres versiones que se exponen a continuaci\u00f3n","title":"MASAYLO - CRG"},{"location":"#masaylo-crg-uno","text":"Esta versi\u00f3n, basada en la placa Keyestudio UNO est\u00e1 pensada para que el alumnado de los \u00faltimos cursos de primaria y los del primer ciclo de ESO trabajen los temas STEAM. En la imagen siguiente vemos el aspecto que presenta el robot MASAYLO-CRG-UNO en fase de dise\u00f1o. La programaci\u00f3n de este modelo la podemos realizar a partir del IDE de Arduino (instalando la librer\u00eda correspondiente) o a partir del entorno gr\u00e1fico MASAYLOBLOCKLY. Aspecto general de MASAYLO-CRG-UNO","title":"MASAYLO-CRG-UNO"},{"location":"#masaylo-crg-nano","text":"Se trata de un modelo totalmente similar al anterior pero que en esta ocasi\u00f3n va a utilizar una placa tipo Arduino Nano con una shield que permite tambi\u00e9n disponer de pines de conexionado r\u00e1pido. En la imagen de la izquierda vemos la placa y en la de la derecha la shield. El aspecto del robot una vez montado es totalmente similar al de la imagen anterior con la salvedad del cambio de placa. Aspecto placa Nano Aspecto de la shield para placa Nano","title":"MASAYLO-CRG-NANO"},{"location":"#masaylo-crg-iot","text":"En este caso el modelo se implementa a partir de una placa Node MCU ESP32 con shield que incluye los drivers para motores. Este modelo se dirige a los \u00faltimos cursos de ESO, bachillerato y Ciclos Formativos y su principal objetivo, sin dejar atr\u00e1s la sencillez del robot, es trabajar, adem\u00e1s de los temas STEAM, el Internet Of Thing (IoT) o internet de las cosas. B\u00e1sicamente el robot va dotado de conexi\u00f3n WiFi con todo lo que ello conlleva. La idea principal es poder programarlo a partir de un entorno de programaci\u00f3n por bloques, poder desarrollar APPs para m\u00f3viles o tablets para su control a partir de un entorno gr\u00e1fico como Blocky, montando nuestro propio servidor para tal fin. Otro objetivo de este robot es poder realizar colaboraciones a distancia consistentes en, por ejemplo, ejercer el control de un robot situado en cualquier parte del mundo desde el lugar en el que el alumnado est\u00e1 trabajando con la APP. En la imagen siguiente a la izquierda vemos el aspecto de la placa ESP32 y a la derecha el de la shield. El aspecto del robot una vez montado es totalmente similar al montado para la versi\u00f3n UNO con la salvedad del cambio de placa y que el driver de motores est\u00e1 integrado en la shield. Aspecto placa Node MCU ESP32 de 30 pines Aspecto de la shield para placa ESP32 El prop\u00f3sito principal es que sea un robot sencillo de imprimir y de construir y que pueda servir para iniciar en el tema STEAM al alumnado desde los \u00faltimos cursos de educaci\u00f3n primaria hasta bachillerato y ciclos formativos pasando por las distintas etapas de la ESO. Se ha pretendido que los dise\u00f1os 3D sean f\u00e1cilmente imprimibles, sin necesidad de soportes y aconsejamos una altura de capa de 0.2mm. Se ha procurado que los tiempos de impresi\u00f3n sean lo m\u00e1s cortos posible pero al mismo tiempo vers\u00e1tiles para las posibles diferencias entre las distintas placas a utilizar. En el apartado de descripci\u00f3n del hardware se pondr\u00e1n algunos enlaces recomendados para adquisici\u00f3n del material aunque, como no pod\u00eda ser de otra manera, cada quien lo puede adquirir donde mejor le parezca. Cualquiera de los modelos puede ser utilizado para otra etapa formativa u objetivo y lo podremos adaptar a nuestras necesidades, siendo esto posible porque se suministran los archivos fuente de dise\u00f1o y programaci\u00f3n y para ello solamente tenemos que cumplir con los requisitos establecidos en las licencias .","title":"MASAYLO-CRG-IoT"},{"location":"ensamble-s/","text":"Materiales necesarios y ensamblado plataforma superior \u00b6 Plataforma superior \u00b6 En esta pieza es donde vamos a colocar el servo para el brazo aparta objetos y los elementos de electr\u00f3nica correspondientes a cada versi\u00f3n. El brazo lo podemos color tanto a la derecha como a la izquierda y recordemos que de forma opcional podemos poner tambi\u00e9n el soporte del zumbador o un sensor fijo de ultrasonidos. El aspecto de la pieza denominada plataforma superior lo vemos en la imagen siguiente. Plataforma superior en fase de dise\u00f1o Plataforma superior Brazo aparta objetos \u00b6 Se trata de una especie de gancho accionado por un servo SG-90 que nos va a servir para apartar objetos detectado por el sensor HC-SR04 de nuestro camino. La idea es que el brazo estar\u00e1 normalmente replegado hacia las ruedas y que, cuando vamos siguiendo una l\u00ednea o resolviendo un laberinto o simplemente desplaz\u00e1ndonos con el robot y detectamos enfrente un objeto del tama\u00f1o de una lata de refresco, se accione el brazo para envolverlo, el robot realice un giro arrastrando el objeto fuera de su trayectoria, posteriormente deshaga el giro, retraiga el brazo y continue su camino. El aspecto del brazo en fase de dise\u00f1o e impreso lo vemos en la imagen siguiente. Brazo en fase de dise\u00f1o Brazo impreso P7. Brazo aparta objetos Im\u00e1genes Necesitamos: - 1 brazo impreso - 1 soporte para servo impreso - 1 pala de un brazo para el servo - 1 tornillo de rosca chapa de los que vienen con el servo - 1 servo SG-90 - 2 tornillos M2x10mm - 2 tuercas M2 - 2 tornillos M3x10mm - 2 tuercas M3 Montamos el servo en su soporte y lo sujetamos con los tornillos M2x10. Colocamos la pala en el alojamiento del brazo y atornillamos este conjunto al servo con el tornillo de rosca chapa. El conjunto anterior lo montamos sobre la plataforma superior en el lugar escogido para ello que deber\u00e1 estar lo mas cercano posible a la parte delantera del robot si imprimimos el brazo a su tama\u00f1o original. En las im\u00e1genes vemos el aspecto de las piezas tanto en fase de dise\u00f1o como impresas \u2192 Es conveniente realizar el posicionamiento del engranaje del servo de forma adecuada antes de continuar. Teniendo en cuenta que el servo puede girar 180\u00ba colocamos el engranaje con la mano o con ayuda de una de las palas del servo en tal posici\u00f3n que permita el movimiento correcto del brazo o del sensor de ultrasonidos. En las imagenes siguientes vemos la plataforma superior con el brazo colocado. Plataforma superior con brazo en fase de dise\u00f1o Plataforma superior con brazo Interruptor, Placa UNO y driver motores \u00b6 Introducimos el interruptor en el orificio rectangular de la plataforma superior destinado para ello y ejerciendo un poco de presi\u00f3n lo encajamos en su lugar. P8. Placa UNO y driver motores Im\u00e1genes Necesitamos: - 7 separadores M3x5mm impresos - 7 tornillos M3x12mm - 7 tuercas M3 - 1 placa UNO con pines extendidos - 1 placa driver de motores L298 Utilizando separadores M3x5mm impresos y tornillos M3x12mm con sus tuercas, colocamos tanto la placa UNO como la placa de drivers en su lugar, que con el interruptor ya colocado nos deja la plataforma superior acabada. En la im\u00e1gen vemos el aspecto del separador en fase de dise\u00f1o \u2192 En la imagen siguiente vemos la plataforma superior en el estado actual. Plataforma superior finalizada en fase de dise\u00f1o Ensamble de las dos plataformas \u00b6 P9. Ensamble de las dos plataformas Im\u00e1genes Necesitamos: - 4 separadores M3x28mm impresos - 4 tornillos M3x40mm - 4 tuercas M3 Utilizando los separadores M3x28mm impresos y tornillos M3x40mm con sus tuercas, sujetamos la plataforma superior a la inferior. En la im\u00e1gen vemos el aspecto del separador en fase de dise\u00f1o \u2192 En la imagen siguiente vemos las dos plataformas montadas. Plataformas superior e inferior montadas en fase de dise\u00f1o Plataformas superior e inferior montadas Sensores de ranura \u00b6 El \u00faltimo paso a realizar es colocar los sensores de ranura sujetos a la plataforma superior y alineados con los discos ranurados de forma que estos giren libremente. P10. Sensores de ranura Necesitamos: - 2 sensores de ranura - 2 tornillos M3x10mm - 2 tuercas M3 - 2 arandelas M3 Sujetamos ambos sensores en su lugar. En las imagenes siguientes vemos mas en detalle el aspecto de estos sensores montados en su lugar. Sensores de ranura en fase de dise\u00f1o Sensores de ranura montados Aspecto final del robot \u00b6 Una vez finalizado el montaje de todos los elementos el robot presenta, en fase de dise\u00f1o, el aspecto que vemos en las im\u00e1genes siguientes. Robot ensamblado en fase de dise\u00f1o Robot ensamblado en fase de dise\u00f1o sobre el soporte de pruebas En las im\u00e1genes siguientes vemos el robot con el ensamblado finalizado. Robot ensamblado Robot ensamblado En la imagen siguiente vemos el robot ensamblado colocado sobre el soporte de pruebas listo para comenzar el conexionado y pruebas del montaje. Robot ensamblado sobre su soporte","title":"Materiales necesarios y ensamblado plataforma superior"},{"location":"ensamble-s/#materiales-necesarios-y-ensamblado-plataforma-superior","text":"","title":"Materiales necesarios y ensamblado plataforma superior"},{"location":"ensamble-s/#plataforma-superior","text":"En esta pieza es donde vamos a colocar el servo para el brazo aparta objetos y los elementos de electr\u00f3nica correspondientes a cada versi\u00f3n. El brazo lo podemos color tanto a la derecha como a la izquierda y recordemos que de forma opcional podemos poner tambi\u00e9n el soporte del zumbador o un sensor fijo de ultrasonidos. El aspecto de la pieza denominada plataforma superior lo vemos en la imagen siguiente. Plataforma superior en fase de dise\u00f1o Plataforma superior","title":"Plataforma superior"},{"location":"ensamble-s/#brazo-aparta-objetos","text":"Se trata de una especie de gancho accionado por un servo SG-90 que nos va a servir para apartar objetos detectado por el sensor HC-SR04 de nuestro camino. La idea es que el brazo estar\u00e1 normalmente replegado hacia las ruedas y que, cuando vamos siguiendo una l\u00ednea o resolviendo un laberinto o simplemente desplaz\u00e1ndonos con el robot y detectamos enfrente un objeto del tama\u00f1o de una lata de refresco, se accione el brazo para envolverlo, el robot realice un giro arrastrando el objeto fuera de su trayectoria, posteriormente deshaga el giro, retraiga el brazo y continue su camino. El aspecto del brazo en fase de dise\u00f1o e impreso lo vemos en la imagen siguiente. Brazo en fase de dise\u00f1o Brazo impreso P7. Brazo aparta objetos Im\u00e1genes Necesitamos: - 1 brazo impreso - 1 soporte para servo impreso - 1 pala de un brazo para el servo - 1 tornillo de rosca chapa de los que vienen con el servo - 1 servo SG-90 - 2 tornillos M2x10mm - 2 tuercas M2 - 2 tornillos M3x10mm - 2 tuercas M3 Montamos el servo en su soporte y lo sujetamos con los tornillos M2x10. Colocamos la pala en el alojamiento del brazo y atornillamos este conjunto al servo con el tornillo de rosca chapa. El conjunto anterior lo montamos sobre la plataforma superior en el lugar escogido para ello que deber\u00e1 estar lo mas cercano posible a la parte delantera del robot si imprimimos el brazo a su tama\u00f1o original. En las im\u00e1genes vemos el aspecto de las piezas tanto en fase de dise\u00f1o como impresas \u2192 Es conveniente realizar el posicionamiento del engranaje del servo de forma adecuada antes de continuar. Teniendo en cuenta que el servo puede girar 180\u00ba colocamos el engranaje con la mano o con ayuda de una de las palas del servo en tal posici\u00f3n que permita el movimiento correcto del brazo o del sensor de ultrasonidos. En las imagenes siguientes vemos la plataforma superior con el brazo colocado. Plataforma superior con brazo en fase de dise\u00f1o Plataforma superior con brazo","title":"Brazo aparta objetos"},{"location":"ensamble-s/#interruptor-placa-uno-y-driver-motores","text":"Introducimos el interruptor en el orificio rectangular de la plataforma superior destinado para ello y ejerciendo un poco de presi\u00f3n lo encajamos en su lugar. P8. Placa UNO y driver motores Im\u00e1genes Necesitamos: - 7 separadores M3x5mm impresos - 7 tornillos M3x12mm - 7 tuercas M3 - 1 placa UNO con pines extendidos - 1 placa driver de motores L298 Utilizando separadores M3x5mm impresos y tornillos M3x12mm con sus tuercas, colocamos tanto la placa UNO como la placa de drivers en su lugar, que con el interruptor ya colocado nos deja la plataforma superior acabada. En la im\u00e1gen vemos el aspecto del separador en fase de dise\u00f1o \u2192 En la imagen siguiente vemos la plataforma superior en el estado actual. Plataforma superior finalizada en fase de dise\u00f1o","title":"Interruptor, Placa UNO y driver motores"},{"location":"ensamble-s/#ensamble-de-las-dos-plataformas","text":"P9. Ensamble de las dos plataformas Im\u00e1genes Necesitamos: - 4 separadores M3x28mm impresos - 4 tornillos M3x40mm - 4 tuercas M3 Utilizando los separadores M3x28mm impresos y tornillos M3x40mm con sus tuercas, sujetamos la plataforma superior a la inferior. En la im\u00e1gen vemos el aspecto del separador en fase de dise\u00f1o \u2192 En la imagen siguiente vemos las dos plataformas montadas. Plataformas superior e inferior montadas en fase de dise\u00f1o Plataformas superior e inferior montadas","title":"Ensamble de las dos plataformas"},{"location":"ensamble-s/#sensores-de-ranura","text":"El \u00faltimo paso a realizar es colocar los sensores de ranura sujetos a la plataforma superior y alineados con los discos ranurados de forma que estos giren libremente. P10. Sensores de ranura Necesitamos: - 2 sensores de ranura - 2 tornillos M3x10mm - 2 tuercas M3 - 2 arandelas M3 Sujetamos ambos sensores en su lugar. En las imagenes siguientes vemos mas en detalle el aspecto de estos sensores montados en su lugar. Sensores de ranura en fase de dise\u00f1o Sensores de ranura montados","title":"Sensores de ranura"},{"location":"ensamble-s/#aspecto-final-del-robot","text":"Una vez finalizado el montaje de todos los elementos el robot presenta, en fase de dise\u00f1o, el aspecto que vemos en las im\u00e1genes siguientes. Robot ensamblado en fase de dise\u00f1o Robot ensamblado en fase de dise\u00f1o sobre el soporte de pruebas En las im\u00e1genes siguientes vemos el robot con el ensamblado finalizado. Robot ensamblado Robot ensamblado En la imagen siguiente vemos el robot ensamblado colocado sobre el soporte de pruebas listo para comenzar el conexionado y pruebas del montaje. Robot ensamblado sobre su soporte","title":"Aspecto final del robot"},{"location":"ensamble/","text":"Materiales necesarios y ensamblado plataforma base \u00b6 Vamos a realizar el paso a paso de montaje del robot utilizando para ellos la versi\u00f3n MASAYLO-CRG-UNO . El montaje de las otras versiones es totalmente similar y la \u00fanica diferencia va a estar en la placa de control teniendo la plataforma superior habilitadas orificios para las distintas placas. En cada uno de los pasos iremos indicando los materiales necesarios para su consecuci\u00f3n. Las herramientas necesarias para llevar a cabo el proceso van a depender del tipo de cabeza de tornillo que utilicemos, pero en cualquier caso necesitaremos destornilladores adecuados y unos alicates de punta plana por si es necesario sujetar alg\u00fan tornillo. Para los motores y el interruptor necesitaremos unos trozos de cable de distintos colores (rojo y negro a ser posible para distinguir bien la alimentaci\u00f3n) de entre 10 y 15 cm de longitud. Estos cables ir\u00e1n directamente soldados a las patillas correspondientes de los motores y del interruptor. En el apartado correspondiente se detalla el proceso. Motores, Portapilas e interruptor \u00b6 P0. Motores Im\u00e1genes Si partimos de la base que los motores no vienen ya preinstalados con cables, necesitamos: - 2 motores DC de 3 a 6V con reductora - 4 trozos de hilos de diferentes colores - Tijeras o pelacables - Soldador para electr\u00f3nica - Se aconseja usar esta\u00f1o de 1mm sin plomo con n\u00facleo de resina y composici\u00f3n del 99% de Sn, 3% de Ag y 0.7% de Cu En la imagen vemos los motores y los cables sin soldar \u2192 En la imagen vemos los motores con los cables soldados \u2192 P0. Portapilas Im\u00e1genes Lo ideal es adquirirlo con los cables ya instalados, aunque existen otras opciones que tendremos que analizar en cada caso. Para este paso necesitamos - 1 portapilas 5xAA Aunque sobresaldr\u00e1 un poco por los laterales tambi\u00e9n nos puede valer un portapilas 6xAA En la imagen vemos el portapilas preparado con los cables \u2192 P0. Interruptor Im\u00e1genes Necesitamos: - 1 mini interruptor basculante de 2 Pines tipo SPST de 10.5x15mm - 2 trozos de hilos de diferentes colores, idealmente rojo y negro, para mantener el est\u00e1ndar de colores de alimentaci\u00f3n Debemos tener presente que con los cables soldados y la forma de colocaci\u00f3n del interruptor (por presi\u00f3n en la plataforma superior) no podemos tener realizadas las conexiones a priori, es mas interesante realizar estas conexiones mediante, por ejemplo una clema, que permite un montaje c\u00f3modo y que podemos quitar si es necesario en el futuro. En la imagen tenemos el interruptor preparado para la instalaci\u00f3n \u2192 Plataforma base \u00b6 En fase de dise\u00f1o el aspecto de la plataforma base lo vemos en la imagen siguiente. P1. Plataforma base Im\u00e1genes Necesitamos: - 1 plataforma base impresa - 1 portapilas - 2 motores DC de 3 a 6V con reductora ya cableados - 2 tornillos M3x8mm de cabeza avellanada - 4 tornillos M3x30mm - 6 tuercas M3 En la imagen vemos el aspecto de la plataforma base una vez impresa \u2192 Sujetamos el portapilas a la base utilizando los dos tornillos M3x8 y dos tuercas. Debe queda como observamos en la imagen quedando el portapilas bajo la base \u2192 Utilizando dos tornillos M3x30 y dos tuercas por cada motor los colocamos y atornillamos a la plataforma base, teniendo cuidado de que los motores queden bien pegados a la base. La posici\u00f3n exacta de los motores viene determinada por los orificios existentes en su carcasa y las ranuras de las pesta\u00f1as verticales de la pieza impresa, que deben quedar alineadas. En esta etapa es conveniente, tal y como se aprecia en la im\u00e1gen, que el disco perforado del encoder est\u00e9 situado en el eje del motor y que este quede mas o menos centrado en la ranura de la base. En la imagen vemos como debe quedar \u2192 En las im\u00e1genes siguientes vemos los pasos anteriores en fase de dise\u00f1o Plataforma base con portapilas Plataforma base con motores Opci\u00f3n zumbador pasivo \u00b6 Podemos optar por colocar el zumbador pasivo en la plataforma base o bien colocarlo en la plataforma superior. A continuaci\u00f3n vemos el aspecto de la pieza en fase de dise\u00f1o. P2. Zumbador pasivo Im\u00e1genes Necesitamos: - 1 soporte para buzzer impreso - 1 zumbador pasivo - 2 tornillos M3x8mm - 2 tuercas M3 - 2 cables tipo dupont H-H de 20 cm En la imagen vemos el aspecto de la pieza impresa \u2192 En la imagen siguiente vemos la plataforma base con el soporte para zumbador colocado en su lugar, tanto en fase de dise\u00f1o como en la realidad. Plataforma base con buzzer en fase de dise\u00f1o Plataforma base con buzzer Ballcaster y porta sensores IR \u00b6 En realidad esta pieza podr\u00eda ser una solamente pero se ha dividido en dos para evitar el uso de soportes en la impresi\u00f3n. El aspecto en tiempo de dise\u00f1o de ambas piezas lo vemos en las imagenes siguientes: | | | P3. Rueda loca y porta sensores de infrarrojos Im\u00e1genes Necesitamos: - 1 ballcaster impreso - 1 portasensores IR impreso - 2 tornillos M3x8mm - 4 tornillos M3x10mm - 6 tuercas M3 - 2 sensores IR de distancia ajustable detecci\u00f3n 2 a 30cm - 6 cables tipo dupont H-H de 20 cm Colocamos y atornillamos los sensores IR con los tornillos M3x8. Empotramos dos tuerca M3 en la pieza ballcaster y colocamos esta pieza en la parte posterior del porta sensores alineando con los agujeros inferiores y atornillando con dos tornillos M3x10. Finalmente atornillamos el conjunto a la plataforma base utilizando dos tornillos M3x10 y alineando con los agujeros centrales de la base en la parte que muestra un trozo plano En la imagen vemos el aspecto del conjunto montado sobre las piezas impresas \u2192 En la imagen siguiente vemos la plataforma base con el soporte para sensores de infrarrojos y rueda loca colocados en su lugar, tanto en fase de dise\u00f1o como en la fase montaje real. Plataforma base con sensor IR en fase de dise\u00f1o Plataforma base con sensor IR Ruedas \u00b6 Nuestra propuesta va a incluir tres dise\u00f1os que van a tener como diferencia el n\u00famero y la posici\u00f3n de juntas t\u00f3ricas. Las ruedas van a tener un radio exterior de 38 mm con una ranura que permite alojar una junta t\u00f3rica de 75 mm de di\u00e1metro exterior y secci\u00f3n transversal de 3mm de di\u00e1metro. En la imagen siguiente vemos a la izquierda el modelo para dos juntas con separaci\u00f3n de 10 mm entre ambas, en el centro la de una sola con la junta colocada y a la derecha tenemos el modelo de dos juntas sin distancia entre las mismas. Observamos como los dise\u00f1os interiores de las ruedas son iguales en cuanto a geometr\u00eda e indicaremos que el n\u00famero y la posici\u00f3n de las juntas se establece para dar soluci\u00f3n a las diferentes adherencias de superficies y evitar en lo posible que las ruedas derrapen cuando giran. El orificio con la forma del eje del motor est\u00e1 dimensionado para que la rueda quede bien acoplada simplemente presionando sobre el eje, pero somos conscientes de que las impresoras 3D tienen ciertas tolerancias y no todas van a darnos exactamente las mismas dimensiones, por ello hemos previsto la posibilidad de realizar la sujeci\u00f3n mediante tornillo que ejerza presi\u00f3n contra el eje del motor y tuerca empotrada en el cilindro de la rueda. Este paso de montaje va a depender de la opci\u00f3n escogida y de si usamos o no tornillo prisionero. P4. Ruedas Im\u00e1genes Necesitamos: - 2 ruedas impresas del modelo escogido - 2 (o 4) juntas t\u00f3ricas de 75x3mm - 2 tornillos M3x10mm - 2 tuercas M3 Colocamos haciendo presi\u00f3n si es necesario una rueda en cada eje de motor. Si es necesario porque el encaje anterior tiene holgura, empotramos una tuerca M3 en cada rueda y fijamos la posici\u00f3n de la rueda utilizando el tornillo prisionero. En la imagen inferior vemos el detalle del tornillo prisionero. En la imagen vemos el aspecto del conjunto montado con las ruedas de una junta \u2192 En las imagenes siguientes vemos la plataforma base con cada tipo de ruedas en fase de dise\u00f1o. Plataforma base con ruedas una junta Plataforma base con ruedas dos juntas Plataforma base con ruedas dos juntas separadas Soporte para servo SG-90 \u00b6 En esta pieza es donde colocamos y atornillamos el servo motor tanto para el brazo aparta objetos como para el sensor de ultrasonidos m\u00f3vil. Si vamos a optar por la opci\u00f3n de ultrasonidos fijo solamente debemos montar un servo pero si optamos por la opci\u00f3n con sensor de ultrasonidos m\u00f3vil debemos montar dos conjuntos. P5. Servo SG-90 Im\u00e1genes Necesitamos: - 1 (o 2) soporte para servo impreso - 1 (o 2) servomotores SG-90 - 2 (o 4) tornillos M2x10mm - 2 (o 4) tuercas M2 Colocamos el servo en la pieza y lo sujetamos utilizando los tornillos M2x10. En las im\u00e1genes vemos el aspecto de la pieza tanto en fase de dise\u00f1o como impresa \u2192 Es conveniente realizar el posicionamiento del engranaje del servo de forma adecuada antes de continuar. Teniendo en cuenta que el servo puede girar 180\u00ba colocamos el engranaje con la mano o con ayuda de una de las palas del servo en tal posici\u00f3n que permita el movimiento correcto del brazo o del sensor de ultrasonidos. En las imagenes siguientes vemos el soporte con el servo colocado. Portaservo con servo en fase de dise\u00f1o Portaservo impreso con servo Soporte sensor de ultrasonidos HC-SR04 \u00b6 Tenemos dos opciones disponibles, un soporte fijo que podemos colocar tanto en la parte superior del porta sensores IR o utilizando alguna de las ranuras de las plataformas superior o inferior, y un soporte m\u00f3vil accionado por un servo pensado para colocarlo a modo de cabeza giratoria tambi\u00e9n en la parte superior del porta sensores de IR. En ambos casos el sensor se coloca presionando ligeramente para que encaje en las pesta\u00f1as del porta sensores. En las im\u00e1genes siguientes tenemos ambos tipos de soportes tanto en modo dise\u00f1o como impresos. Porta HC-SR04 fijo fase dise\u00f1o Porta HC-SR04 fijo impreso Porta HC-SR04 m\u00f3vil fase dise\u00f1o Porta HC-SR04 m\u00f3vil impreso P6. Sensor de ultrasonidos HC-SR04 Im\u00e1genes Necesitamos: - 1 soporte fijo para sensor HC-SR04 impreso - 1 soporte m\u00f3vil para sensor HC-SR04 impreso - 1 (o 2) pala de un brazo para el servo - 1 (o 2) tornillos de rosca chapa de los que vienen con el servo - 1 servo montado en su soporte - 2 tornillos M3x10mm - 2 tuercas M3 Colocamos el sensor de ultrasonidos en su alojamiento en el soporte fijo o m\u00f3vil elegido. Si hemos escogido soporte fijo sujetamos este con dos tornillos M3x10 en el lugar escogido y si hemos escogido el soporte m\u00f3vil sujetamos el soporte del sensor al servo con el tornillo de rosca chapa colocando la pala en la cabeza del servo. En las im\u00e1genes vemos el aspecto de las piezas tanto en fase de dise\u00f1o como impresas \u2192 Es conveniente realizar el posicionamiento del engranaje del servo de forma adecuada antes de continuar. Teniendo en cuenta que el servo puede girar 180\u00ba colocamos el engranaje con la mano o con ayuda de una de las palas del servo en tal posici\u00f3n que permita el movimiento correcto del brazo o del sensor de ultrasonidos. En las imagenes siguientes vemos la plataforma base finalizada con todas sus opciones colocadas. Plataforma base finalizada en fase de dise\u00f1o Plataforma base finalizada","title":"Materiales necesarios y ensamblado plataforma base"},{"location":"ensamble/#materiales-necesarios-y-ensamblado-plataforma-base","text":"Vamos a realizar el paso a paso de montaje del robot utilizando para ellos la versi\u00f3n MASAYLO-CRG-UNO . El montaje de las otras versiones es totalmente similar y la \u00fanica diferencia va a estar en la placa de control teniendo la plataforma superior habilitadas orificios para las distintas placas. En cada uno de los pasos iremos indicando los materiales necesarios para su consecuci\u00f3n. Las herramientas necesarias para llevar a cabo el proceso van a depender del tipo de cabeza de tornillo que utilicemos, pero en cualquier caso necesitaremos destornilladores adecuados y unos alicates de punta plana por si es necesario sujetar alg\u00fan tornillo. Para los motores y el interruptor necesitaremos unos trozos de cable de distintos colores (rojo y negro a ser posible para distinguir bien la alimentaci\u00f3n) de entre 10 y 15 cm de longitud. Estos cables ir\u00e1n directamente soldados a las patillas correspondientes de los motores y del interruptor. En el apartado correspondiente se detalla el proceso.","title":"Materiales necesarios y ensamblado plataforma base"},{"location":"ensamble/#motores-portapilas-e-interruptor","text":"P0. Motores Im\u00e1genes Si partimos de la base que los motores no vienen ya preinstalados con cables, necesitamos: - 2 motores DC de 3 a 6V con reductora - 4 trozos de hilos de diferentes colores - Tijeras o pelacables - Soldador para electr\u00f3nica - Se aconseja usar esta\u00f1o de 1mm sin plomo con n\u00facleo de resina y composici\u00f3n del 99% de Sn, 3% de Ag y 0.7% de Cu En la imagen vemos los motores y los cables sin soldar \u2192 En la imagen vemos los motores con los cables soldados \u2192 P0. Portapilas Im\u00e1genes Lo ideal es adquirirlo con los cables ya instalados, aunque existen otras opciones que tendremos que analizar en cada caso. Para este paso necesitamos - 1 portapilas 5xAA Aunque sobresaldr\u00e1 un poco por los laterales tambi\u00e9n nos puede valer un portapilas 6xAA En la imagen vemos el portapilas preparado con los cables \u2192 P0. Interruptor Im\u00e1genes Necesitamos: - 1 mini interruptor basculante de 2 Pines tipo SPST de 10.5x15mm - 2 trozos de hilos de diferentes colores, idealmente rojo y negro, para mantener el est\u00e1ndar de colores de alimentaci\u00f3n Debemos tener presente que con los cables soldados y la forma de colocaci\u00f3n del interruptor (por presi\u00f3n en la plataforma superior) no podemos tener realizadas las conexiones a priori, es mas interesante realizar estas conexiones mediante, por ejemplo una clema, que permite un montaje c\u00f3modo y que podemos quitar si es necesario en el futuro. En la imagen tenemos el interruptor preparado para la instalaci\u00f3n \u2192","title":"Motores, Portapilas e interruptor"},{"location":"ensamble/#plataforma-base","text":"En fase de dise\u00f1o el aspecto de la plataforma base lo vemos en la imagen siguiente. P1. Plataforma base Im\u00e1genes Necesitamos: - 1 plataforma base impresa - 1 portapilas - 2 motores DC de 3 a 6V con reductora ya cableados - 2 tornillos M3x8mm de cabeza avellanada - 4 tornillos M3x30mm - 6 tuercas M3 En la imagen vemos el aspecto de la plataforma base una vez impresa \u2192 Sujetamos el portapilas a la base utilizando los dos tornillos M3x8 y dos tuercas. Debe queda como observamos en la imagen quedando el portapilas bajo la base \u2192 Utilizando dos tornillos M3x30 y dos tuercas por cada motor los colocamos y atornillamos a la plataforma base, teniendo cuidado de que los motores queden bien pegados a la base. La posici\u00f3n exacta de los motores viene determinada por los orificios existentes en su carcasa y las ranuras de las pesta\u00f1as verticales de la pieza impresa, que deben quedar alineadas. En esta etapa es conveniente, tal y como se aprecia en la im\u00e1gen, que el disco perforado del encoder est\u00e9 situado en el eje del motor y que este quede mas o menos centrado en la ranura de la base. En la imagen vemos como debe quedar \u2192 En las im\u00e1genes siguientes vemos los pasos anteriores en fase de dise\u00f1o Plataforma base con portapilas Plataforma base con motores","title":"Plataforma base"},{"location":"ensamble/#opcion-zumbador-pasivo","text":"Podemos optar por colocar el zumbador pasivo en la plataforma base o bien colocarlo en la plataforma superior. A continuaci\u00f3n vemos el aspecto de la pieza en fase de dise\u00f1o. P2. Zumbador pasivo Im\u00e1genes Necesitamos: - 1 soporte para buzzer impreso - 1 zumbador pasivo - 2 tornillos M3x8mm - 2 tuercas M3 - 2 cables tipo dupont H-H de 20 cm En la imagen vemos el aspecto de la pieza impresa \u2192 En la imagen siguiente vemos la plataforma base con el soporte para zumbador colocado en su lugar, tanto en fase de dise\u00f1o como en la realidad. Plataforma base con buzzer en fase de dise\u00f1o Plataforma base con buzzer","title":"Opci\u00f3n zumbador pasivo"},{"location":"ensamble/#ballcaster-y-porta-sensores-ir","text":"En realidad esta pieza podr\u00eda ser una solamente pero se ha dividido en dos para evitar el uso de soportes en la impresi\u00f3n. El aspecto en tiempo de dise\u00f1o de ambas piezas lo vemos en las imagenes siguientes: | | | P3. Rueda loca y porta sensores de infrarrojos Im\u00e1genes Necesitamos: - 1 ballcaster impreso - 1 portasensores IR impreso - 2 tornillos M3x8mm - 4 tornillos M3x10mm - 6 tuercas M3 - 2 sensores IR de distancia ajustable detecci\u00f3n 2 a 30cm - 6 cables tipo dupont H-H de 20 cm Colocamos y atornillamos los sensores IR con los tornillos M3x8. Empotramos dos tuerca M3 en la pieza ballcaster y colocamos esta pieza en la parte posterior del porta sensores alineando con los agujeros inferiores y atornillando con dos tornillos M3x10. Finalmente atornillamos el conjunto a la plataforma base utilizando dos tornillos M3x10 y alineando con los agujeros centrales de la base en la parte que muestra un trozo plano En la imagen vemos el aspecto del conjunto montado sobre las piezas impresas \u2192 En la imagen siguiente vemos la plataforma base con el soporte para sensores de infrarrojos y rueda loca colocados en su lugar, tanto en fase de dise\u00f1o como en la fase montaje real. Plataforma base con sensor IR en fase de dise\u00f1o Plataforma base con sensor IR","title":"Ballcaster y porta sensores IR"},{"location":"ensamble/#ruedas","text":"Nuestra propuesta va a incluir tres dise\u00f1os que van a tener como diferencia el n\u00famero y la posici\u00f3n de juntas t\u00f3ricas. Las ruedas van a tener un radio exterior de 38 mm con una ranura que permite alojar una junta t\u00f3rica de 75 mm de di\u00e1metro exterior y secci\u00f3n transversal de 3mm de di\u00e1metro. En la imagen siguiente vemos a la izquierda el modelo para dos juntas con separaci\u00f3n de 10 mm entre ambas, en el centro la de una sola con la junta colocada y a la derecha tenemos el modelo de dos juntas sin distancia entre las mismas. Observamos como los dise\u00f1os interiores de las ruedas son iguales en cuanto a geometr\u00eda e indicaremos que el n\u00famero y la posici\u00f3n de las juntas se establece para dar soluci\u00f3n a las diferentes adherencias de superficies y evitar en lo posible que las ruedas derrapen cuando giran. El orificio con la forma del eje del motor est\u00e1 dimensionado para que la rueda quede bien acoplada simplemente presionando sobre el eje, pero somos conscientes de que las impresoras 3D tienen ciertas tolerancias y no todas van a darnos exactamente las mismas dimensiones, por ello hemos previsto la posibilidad de realizar la sujeci\u00f3n mediante tornillo que ejerza presi\u00f3n contra el eje del motor y tuerca empotrada en el cilindro de la rueda. Este paso de montaje va a depender de la opci\u00f3n escogida y de si usamos o no tornillo prisionero. P4. Ruedas Im\u00e1genes Necesitamos: - 2 ruedas impresas del modelo escogido - 2 (o 4) juntas t\u00f3ricas de 75x3mm - 2 tornillos M3x10mm - 2 tuercas M3 Colocamos haciendo presi\u00f3n si es necesario una rueda en cada eje de motor. Si es necesario porque el encaje anterior tiene holgura, empotramos una tuerca M3 en cada rueda y fijamos la posici\u00f3n de la rueda utilizando el tornillo prisionero. En la imagen inferior vemos el detalle del tornillo prisionero. En la imagen vemos el aspecto del conjunto montado con las ruedas de una junta \u2192 En las imagenes siguientes vemos la plataforma base con cada tipo de ruedas en fase de dise\u00f1o. Plataforma base con ruedas una junta Plataforma base con ruedas dos juntas Plataforma base con ruedas dos juntas separadas","title":"Ruedas"},{"location":"ensamble/#soporte-para-servo-sg-90","text":"En esta pieza es donde colocamos y atornillamos el servo motor tanto para el brazo aparta objetos como para el sensor de ultrasonidos m\u00f3vil. Si vamos a optar por la opci\u00f3n de ultrasonidos fijo solamente debemos montar un servo pero si optamos por la opci\u00f3n con sensor de ultrasonidos m\u00f3vil debemos montar dos conjuntos. P5. Servo SG-90 Im\u00e1genes Necesitamos: - 1 (o 2) soporte para servo impreso - 1 (o 2) servomotores SG-90 - 2 (o 4) tornillos M2x10mm - 2 (o 4) tuercas M2 Colocamos el servo en la pieza y lo sujetamos utilizando los tornillos M2x10. En las im\u00e1genes vemos el aspecto de la pieza tanto en fase de dise\u00f1o como impresa \u2192 Es conveniente realizar el posicionamiento del engranaje del servo de forma adecuada antes de continuar. Teniendo en cuenta que el servo puede girar 180\u00ba colocamos el engranaje con la mano o con ayuda de una de las palas del servo en tal posici\u00f3n que permita el movimiento correcto del brazo o del sensor de ultrasonidos. En las imagenes siguientes vemos el soporte con el servo colocado. Portaservo con servo en fase de dise\u00f1o Portaservo impreso con servo","title":"Soporte para servo SG-90"},{"location":"ensamble/#soporte-sensor-de-ultrasonidos-hc-sr04","text":"Tenemos dos opciones disponibles, un soporte fijo que podemos colocar tanto en la parte superior del porta sensores IR o utilizando alguna de las ranuras de las plataformas superior o inferior, y un soporte m\u00f3vil accionado por un servo pensado para colocarlo a modo de cabeza giratoria tambi\u00e9n en la parte superior del porta sensores de IR. En ambos casos el sensor se coloca presionando ligeramente para que encaje en las pesta\u00f1as del porta sensores. En las im\u00e1genes siguientes tenemos ambos tipos de soportes tanto en modo dise\u00f1o como impresos. Porta HC-SR04 fijo fase dise\u00f1o Porta HC-SR04 fijo impreso Porta HC-SR04 m\u00f3vil fase dise\u00f1o Porta HC-SR04 m\u00f3vil impreso P6. Sensor de ultrasonidos HC-SR04 Im\u00e1genes Necesitamos: - 1 soporte fijo para sensor HC-SR04 impreso - 1 soporte m\u00f3vil para sensor HC-SR04 impreso - 1 (o 2) pala de un brazo para el servo - 1 (o 2) tornillos de rosca chapa de los que vienen con el servo - 1 servo montado en su soporte - 2 tornillos M3x10mm - 2 tuercas M3 Colocamos el sensor de ultrasonidos en su alojamiento en el soporte fijo o m\u00f3vil elegido. Si hemos escogido soporte fijo sujetamos este con dos tornillos M3x10 en el lugar escogido y si hemos escogido el soporte m\u00f3vil sujetamos el soporte del sensor al servo con el tornillo de rosca chapa colocando la pala en la cabeza del servo. En las im\u00e1genes vemos el aspecto de las piezas tanto en fase de dise\u00f1o como impresas \u2192 Es conveniente realizar el posicionamiento del engranaje del servo de forma adecuada antes de continuar. Teniendo en cuenta que el servo puede girar 180\u00ba colocamos el engranaje con la mano o con ayuda de una de las palas del servo en tal posici\u00f3n que permita el movimiento correcto del brazo o del sensor de ultrasonidos. En las imagenes siguientes vemos la plataforma base finalizada con todas sus opciones colocadas. Plataforma base finalizada en fase de dise\u00f1o Plataforma base finalizada","title":"Soporte sensor de ultrasonidos HC-SR04"},{"location":"ficheros/","text":"Ficheros \u00b6 En este apartado se incluyen los enlaces a los archivos originales de dise\u00f1o, los archivos en formato stl y step. Para el caso de las ruedas se dan dos posibles soluciones, con la idea de suplir en lo posible la alta tolerancia de algunas impresoras. En concreto nos referimos al orificio para encajar el eje del motor. Para mayor claridad vamos a sacar los modelos de las tablas y los pondremos al final en un apartado concreto con su correspondiente explicaci\u00f3n. Archivos fuente de dise\u00f1o \u00b6 Creados con FreeCAD que puedes modificar, cambiar seg\u00fan necesidades o utilizar para aprender el manejo de esta potente herramienta. Archivo Comentarios plataforma-base-src.FCStd Para colocar el portapilas, los motores DC, el zumbador y el ballcaster o punto de apoyo estilo rueda loca soporte-zumbador-src.FCStd Para colocar un zumbador pasivo. Esta pieza tambi\u00e9n se puede colocar en la plataforma superior soporte-sensores-IR-ballcaster.FCStd Contiene dos piezas, el ballcaster y el soporte de los sensores verticales de IR soportes-ultrasonidos.FCStd Contiene los soporte fijo y m\u00f3vil para el sensor HC-SR04 plataforma-superior-src.FCStd Para colocar cualquiera de las placas, el interruptor y sujetar el servo del brazo base-servo-src.FCStd Pieza para sujetar un servo tipo SG90 brazo-src.FCStd Brazo aparta objetos con alojamiento para la pala del servo separadores-src.FCStd M3x5 para placa UNO y driver y M3x28 para unir plataformas base y superior soporte-pruebas.FCStd Pieza pensada para poner encima el robot y poder hacer pruebas sin que este se mueva del sitio disco-encoder.FCStd Disco de 23 mm de di\u00e1metro con 20 ranuras para acoplable a eje de motor para encoder optico conjunto-src.FCStd Muestra la colocaci\u00f3n de los distintos elementos en fase de dise\u00f1o Todo en un archivo zip Para descargar todos los archivos en un clic Archivos STL y STEP \u00b6 Archivos en formato stl , listos para llevar a tu programa de laminaci\u00f3n preferido y hacerlos realidad con tu impresora. La configuraci\u00f3n de impresi\u00f3n debe adaptarse en cada caso a la impresora disponible, aunque hacemos las siguientes recomendaciones: Balsas: No Soportes de impresi\u00f3n: No Resoluci\u00f3n: 0,2 mm Relleno: 15 - 20% Marca de filamento: cualquiera Color del filamento: el preferido Material: PLA Archivos en formato step , para poder cargarlos en otros programas de dise\u00f1o CAD. En la tabla siguiente est\u00e1n los enlaces a estos dos tipos de ficheros. Imagen Archivo STL Archivo STEP ballcaster.stl ballcaster.step base-servo.stl base-servo.step brazo.stl brazo.step disco-encoder.stl disco-encoder.step plataforma-base.stl plataforma-base.step plataforma-superior.stl plataforma-superior.step porta-sensores-IR.stl porta-sensores-IR.step rueda-una-junta.stl rueda-una-junta.step rueda-dos-juntas.stl rueda-dos-juntas.step rueda-dos-juntas-ancha.stl rueda-dos-juntas-ancha.step separador-M3x5.stl separador-M3x5.step separador-M3x28.stl separador-M3x28.step soporte-para-pruebas.stl soporte-para-pruebas.step soporte-zumbador.stl soporte-zumbador.step ultrasonidos-fijo.stl ultrasonidos-fijo.step ultrasonidos-movil.stl ultrasonidos-movil.step Todos los archivos en un zip Todos los stl en un zip Todos los step en un zip Ruedas: archivos de dise\u00f1o, STL y STEP \u00b6 Archivos de dise\u00f1o Archivo Comentarios ruedas.FCStd Rueda con una sola junta t\u00f3rica y dos versiones para dos juntas, una con esta juntas y la otra separadas. Se trata del modelo con ajuste de precisi\u00f3n que debemos escoger siempre que dispongamos de una impresora de calidad ruedas-hueco-eje-mayor.FCStd Se trata del mismo modelo que el anterior pero con un hueco para el eje del motor de mayores dimensiones. Esta es la versi\u00f3n que debemos escoger si no disponemos de una impresora de calidad Archivos STL y STEP Imagen Archivo STL Archivo STEP rueda-una-junta.stl rueda-una-junta-eje-motor-mayor.stl rueda-una-junta.step rueda-una-junta-eje-motor-mayor.step rueda-dos-juntas.stl rueda-dos-juntas-eje-motor-mayor.stl rueda-dos-juntas.step rueda-dos-juntas-eje-motor-mayor.step rueda-dos-juntas-ancha.stl rueda-dos-juntas-ancha-eje-motor-mayor.stl rueda-dos-juntas-ancha.step rueda-dos-juntas-ancha-eje-motor-mayor.step","title":"Ficheros"},{"location":"ficheros/#ficheros","text":"En este apartado se incluyen los enlaces a los archivos originales de dise\u00f1o, los archivos en formato stl y step. Para el caso de las ruedas se dan dos posibles soluciones, con la idea de suplir en lo posible la alta tolerancia de algunas impresoras. En concreto nos referimos al orificio para encajar el eje del motor. Para mayor claridad vamos a sacar los modelos de las tablas y los pondremos al final en un apartado concreto con su correspondiente explicaci\u00f3n.","title":"Ficheros"},{"location":"ficheros/#archivos-fuente-de-diseno","text":"Creados con FreeCAD que puedes modificar, cambiar seg\u00fan necesidades o utilizar para aprender el manejo de esta potente herramienta. Archivo Comentarios plataforma-base-src.FCStd Para colocar el portapilas, los motores DC, el zumbador y el ballcaster o punto de apoyo estilo rueda loca soporte-zumbador-src.FCStd Para colocar un zumbador pasivo. Esta pieza tambi\u00e9n se puede colocar en la plataforma superior soporte-sensores-IR-ballcaster.FCStd Contiene dos piezas, el ballcaster y el soporte de los sensores verticales de IR soportes-ultrasonidos.FCStd Contiene los soporte fijo y m\u00f3vil para el sensor HC-SR04 plataforma-superior-src.FCStd Para colocar cualquiera de las placas, el interruptor y sujetar el servo del brazo base-servo-src.FCStd Pieza para sujetar un servo tipo SG90 brazo-src.FCStd Brazo aparta objetos con alojamiento para la pala del servo separadores-src.FCStd M3x5 para placa UNO y driver y M3x28 para unir plataformas base y superior soporte-pruebas.FCStd Pieza pensada para poner encima el robot y poder hacer pruebas sin que este se mueva del sitio disco-encoder.FCStd Disco de 23 mm de di\u00e1metro con 20 ranuras para acoplable a eje de motor para encoder optico conjunto-src.FCStd Muestra la colocaci\u00f3n de los distintos elementos en fase de dise\u00f1o Todo en un archivo zip Para descargar todos los archivos en un clic","title":"Archivos fuente de dise\u00f1o"},{"location":"ficheros/#archivos-stl-y-step","text":"Archivos en formato stl , listos para llevar a tu programa de laminaci\u00f3n preferido y hacerlos realidad con tu impresora. La configuraci\u00f3n de impresi\u00f3n debe adaptarse en cada caso a la impresora disponible, aunque hacemos las siguientes recomendaciones: Balsas: No Soportes de impresi\u00f3n: No Resoluci\u00f3n: 0,2 mm Relleno: 15 - 20% Marca de filamento: cualquiera Color del filamento: el preferido Material: PLA Archivos en formato step , para poder cargarlos en otros programas de dise\u00f1o CAD. En la tabla siguiente est\u00e1n los enlaces a estos dos tipos de ficheros. Imagen Archivo STL Archivo STEP ballcaster.stl ballcaster.step base-servo.stl base-servo.step brazo.stl brazo.step disco-encoder.stl disco-encoder.step plataforma-base.stl plataforma-base.step plataforma-superior.stl plataforma-superior.step porta-sensores-IR.stl porta-sensores-IR.step rueda-una-junta.stl rueda-una-junta.step rueda-dos-juntas.stl rueda-dos-juntas.step rueda-dos-juntas-ancha.stl rueda-dos-juntas-ancha.step separador-M3x5.stl separador-M3x5.step separador-M3x28.stl separador-M3x28.step soporte-para-pruebas.stl soporte-para-pruebas.step soporte-zumbador.stl soporte-zumbador.step ultrasonidos-fijo.stl ultrasonidos-fijo.step ultrasonidos-movil.stl ultrasonidos-movil.step Todos los archivos en un zip Todos los stl en un zip Todos los step en un zip","title":"Archivos STL y STEP"},{"location":"ficheros/#ruedas-archivos-de-diseno-stl-y-step","text":"Archivos de dise\u00f1o Archivo Comentarios ruedas.FCStd Rueda con una sola junta t\u00f3rica y dos versiones para dos juntas, una con esta juntas y la otra separadas. Se trata del modelo con ajuste de precisi\u00f3n que debemos escoger siempre que dispongamos de una impresora de calidad ruedas-hueco-eje-mayor.FCStd Se trata del mismo modelo que el anterior pero con un hueco para el eje del motor de mayores dimensiones. Esta es la versi\u00f3n que debemos escoger si no disponemos de una impresora de calidad Archivos STL y STEP Imagen Archivo STL Archivo STEP rueda-una-junta.stl rueda-una-junta-eje-motor-mayor.stl rueda-una-junta.step rueda-una-junta-eje-motor-mayor.step rueda-dos-juntas.stl rueda-dos-juntas-eje-motor-mayor.stl rueda-dos-juntas.step rueda-dos-juntas-eje-motor-mayor.step rueda-dos-juntas-ancha.stl rueda-dos-juntas-ancha-eje-motor-mayor.stl rueda-dos-juntas-ancha.step rueda-dos-juntas-ancha-eje-motor-mayor.step","title":"Ruedas: archivos de dise\u00f1o, STL y STEP"},{"location":"Miscelanea/about/","text":"Autores \u00b6 Este proyecto es una colaboraci\u00f3n entre distintos miembros de Club Robotica Granada y Antonio G\u00f3mez Garc\u00eda . Club Robotica Granada Federico Coca Antonio G\u00f3mez Pedro Ruiz GitHub GitHub GitHub GitHub Twitter Twitter Twitter Twitter Manuel Hidalgo Prudencio Luna Jos\u00e9 Luis Bueno Maribel Ruiz GitHub GitHub --- GitHub Twitter Twitter Twitter ---","title":"Autores"},{"location":"Miscelanea/about/#autores","text":"Este proyecto es una colaboraci\u00f3n entre distintos miembros de Club Robotica Granada y Antonio G\u00f3mez Garc\u00eda . Club Robotica Granada Federico Coca Antonio G\u00f3mez Pedro Ruiz GitHub GitHub GitHub GitHub Twitter Twitter Twitter Twitter Manuel Hidalgo Prudencio Luna Jos\u00e9 Luis Bueno Maribel Ruiz GitHub GitHub --- GitHub Twitter Twitter Twitter ---","title":"Autores"},{"location":"Miscelanea/lic/","text":"Licencias \u00b6 Licencia MIT incluida en la creaci\u00f3n del repositorio. Creative Commons Atribuci\u00f3n-CompartirIgual 4.0 International (\"CC BY-SA\"). CC BY-SA 4.0 Open Source Hardware (OSHW). Enlace a la versi\u00f3n V 1.0 original de la licencia - Enlace a la traducci\u00f3n de la versi\u00f3n V 1.0 original de la licencia - Spanish - Open Source Hardware Association","title":"Licencias"},{"location":"Miscelanea/lic/#licencias","text":"Licencia MIT incluida en la creaci\u00f3n del repositorio. Creative Commons Atribuci\u00f3n-CompartirIgual 4.0 International (\"CC BY-SA\"). CC BY-SA 4.0 Open Source Hardware (OSHW). Enlace a la versi\u00f3n V 1.0 original de la licencia - Enlace a la traducci\u00f3n de la versi\u00f3n V 1.0 original de la licencia - Spanish - Open Source Hardware Association","title":"Licencias"},{"location":"Miscelanea/soft/","text":"Software utilizado \u00b6 Dibujo 3D FreeCAD 0.19 Sistema operativo principal: Ubuntu 20.04.4 LTS (Focal Fossa) Paquete ofim\u00e1tico de referencia: LibreOffice Libreria Material para MkDocs Visual Studio Code Creaci\u00f3n de GIF animados para Ubuntu Peek Sistema principal de capturas de pantalla: Shutter 0.94 Dibujo 2D vectorial Inkscape Retoque de im\u00e1genes GIMP Creaci\u00f3n de GIF animado a partir de video con FFMPEG y GIMP IDE de Arduino Masaylo Blockly ArduinoBlocks","title":"Software utilizado"},{"location":"Miscelanea/soft/#software-utilizado","text":"Dibujo 3D FreeCAD 0.19 Sistema operativo principal: Ubuntu 20.04.4 LTS (Focal Fossa) Paquete ofim\u00e1tico de referencia: LibreOffice Libreria Material para MkDocs Visual Studio Code Creaci\u00f3n de GIF animados para Ubuntu Peek Sistema principal de capturas de pantalla: Shutter 0.94 Dibujo 2D vectorial Inkscape Retoque de im\u00e1genes GIMP Creaci\u00f3n de GIF animado a partir de video con FFMPEG y GIMP IDE de Arduino Masaylo Blockly ArduinoBlocks","title":"Software utilizado"},{"location":"Miscelanea/webgrafia/","text":"Webgraf\u00eda y bibliograf\u00eda \u00b6 Wikipedia Wiki de Keyestudio","title":"Webgrafia/Bibliograf\u00eda"},{"location":"Miscelanea/webgrafia/#webgrafia-y-bibliografia","text":"Wikipedia Wiki de Keyestudio","title":"Webgraf\u00eda y bibliograf\u00eda"},{"location":"conexionado-pruebas/UNO/conex/","text":"Conexionado de los distintos elementos \u00b6 Describimos el conexionado que debemos realizar entre los distintos elementos, y lo haremos fundamentalmente en forma de gr\u00e1fico y utilizando el pinout mostrado en la imagen siguiente. La fuente de esta imagen la tenemos en este archivo svg Masaylo-CRG UNO pinout Alimentaci\u00f3n \u00b6 Antes de nada vamos a resolver las conexiones de alimentaci\u00f3n de nuestra placa UNO y del driver de motores L298 junto con el portapilas y el interruptor. El resto de elementos se alimentar\u00e1n directamente de la placa UNO. El conexionado es v\u00e1lido si sustituimos las cinco (o seis) pilas AA por dos bater\u00edas tipo 18650. Para que la placa UNO y el driver queden conectados con el interruptor utilizaremos una clema de la que sacaremos un cable para el jack de alimentaci\u00f3n del UNO y otro para el positivo del driver, siendo este cable el que previamente pasa por el interruptor procedente del portapilas. El negativo es un cable doble que va al UNO y al driver sin pasar por el interruptor. En estas condiciones el junper Regulador del driver debe estar colocado en su lugar y debemos tener en cuenta que la tensi\u00f3n de entrada caer\u00e1 en 0.7V debido al diodo protector de inversi\u00f3n de polaridad que lleva la placa. Esto lo podemos evitar utilizando el pin Vin de la tira de pines de alimentaci\u00f3n, pero debemos tener en cuenta que as\u00ed no hay protecci\u00f3n y que se recomienda no usar tensiones superiores a 6V. En nuestro caso usamos 5 pilas AA con lo que partimos de una tensi\u00f3n de 7.5V que bajar\u00e1 aproximadamente a 6.8V y si usamos 2x18650 tendremos 7.2V que se quedar\u00e1n en 6.5V. En la imagen siguiente tenemos el detalle de conexionado de la alimentaci\u00f3n para ambas placas que debemos realizar de forma cuidadosa en especial y no cambiar la polaridad de la alimentaci\u00f3n que se ha marcado y dibujado con los colores normalizados de la misma. Conexionado de alimentaci\u00f3n La forma m\u00e1s sencilla de conectar los elementos es utilizando un jack de alimentaci\u00f3n con clema como el que se ve en la imagen anterior aunque tambi\u00e9n podemos utilizar un jack normal realizando las correspondientes soldaduras. Se recomienda que una vez finalizadas las conexiones se revisen estas cuidadosamente, tanto en las conexiones en si mismas como en la polaridad, antes de alimentar el sistema o conectar el USB para grabar alg\u00fan programa, as\u00ed evitaremos en lo posible romper algo por mal conexionado. Motores DC 3 a 6V \u00b6 Procedemos a conectar los motores en las bornas del driver L298 de forma que el motor izquierdo quede conectado a OUT1 - OUT2 y el derecho a OUT3 - OUT4. Por ahora no nos preocupamos de la polaridad ya que lo haremos en las pruebas y si alg\u00fan motor girar en sentido contario al esperado bastar\u00e1 con intercambiar sus conexiones de posici\u00f3n. En la imagen siguiente tenemos el conexionado de forma gr\u00e1fica. Conexionado de motores Zumbador \u00b6 Usamos el pin D1 o TxD y su Vcc asociado para conectarlo. En principio esta conexi\u00f3n no debe interferir en la grabaci\u00f3n de programas en la placa que siempre se realiza utilizando los pines D0 y D1 de la placa, pero si nos da alg\u00fan problema basta con que desconectemos el pin D0 del sensor en uno de sus extremos, procedamos a grabar el programa correspondiente y una vez cargado este volvemos a conectar el pin en su lugar. Si no queremos estar escuchando pitidos de manera continuada cuando subimos c\u00f3digo a la placa o cuando usamos el monitor serie tambi\u00e9n debemos desconectar esta patilla. En la imagen siguiente observamos una pareja de cables, uno blanco que va al pin D1 y uno negro que va a GND. Conexionado del zumbador Sensores de infrarrojos \u00b6","title":"Conexionado"},{"location":"conexionado-pruebas/UNO/conex/#conexionado-de-los-distintos-elementos","text":"Describimos el conexionado que debemos realizar entre los distintos elementos, y lo haremos fundamentalmente en forma de gr\u00e1fico y utilizando el pinout mostrado en la imagen siguiente. La fuente de esta imagen la tenemos en este archivo svg Masaylo-CRG UNO pinout","title":"Conexionado de los distintos elementos"},{"location":"conexionado-pruebas/UNO/conex/#alimentacion","text":"Antes de nada vamos a resolver las conexiones de alimentaci\u00f3n de nuestra placa UNO y del driver de motores L298 junto con el portapilas y el interruptor. El resto de elementos se alimentar\u00e1n directamente de la placa UNO. El conexionado es v\u00e1lido si sustituimos las cinco (o seis) pilas AA por dos bater\u00edas tipo 18650. Para que la placa UNO y el driver queden conectados con el interruptor utilizaremos una clema de la que sacaremos un cable para el jack de alimentaci\u00f3n del UNO y otro para el positivo del driver, siendo este cable el que previamente pasa por el interruptor procedente del portapilas. El negativo es un cable doble que va al UNO y al driver sin pasar por el interruptor. En estas condiciones el junper Regulador del driver debe estar colocado en su lugar y debemos tener en cuenta que la tensi\u00f3n de entrada caer\u00e1 en 0.7V debido al diodo protector de inversi\u00f3n de polaridad que lleva la placa. Esto lo podemos evitar utilizando el pin Vin de la tira de pines de alimentaci\u00f3n, pero debemos tener en cuenta que as\u00ed no hay protecci\u00f3n y que se recomienda no usar tensiones superiores a 6V. En nuestro caso usamos 5 pilas AA con lo que partimos de una tensi\u00f3n de 7.5V que bajar\u00e1 aproximadamente a 6.8V y si usamos 2x18650 tendremos 7.2V que se quedar\u00e1n en 6.5V. En la imagen siguiente tenemos el detalle de conexionado de la alimentaci\u00f3n para ambas placas que debemos realizar de forma cuidadosa en especial y no cambiar la polaridad de la alimentaci\u00f3n que se ha marcado y dibujado con los colores normalizados de la misma. Conexionado de alimentaci\u00f3n La forma m\u00e1s sencilla de conectar los elementos es utilizando un jack de alimentaci\u00f3n con clema como el que se ve en la imagen anterior aunque tambi\u00e9n podemos utilizar un jack normal realizando las correspondientes soldaduras. Se recomienda que una vez finalizadas las conexiones se revisen estas cuidadosamente, tanto en las conexiones en si mismas como en la polaridad, antes de alimentar el sistema o conectar el USB para grabar alg\u00fan programa, as\u00ed evitaremos en lo posible romper algo por mal conexionado.","title":"Alimentaci\u00f3n"},{"location":"conexionado-pruebas/UNO/conex/#motores-dc-3-a-6v","text":"Procedemos a conectar los motores en las bornas del driver L298 de forma que el motor izquierdo quede conectado a OUT1 - OUT2 y el derecho a OUT3 - OUT4. Por ahora no nos preocupamos de la polaridad ya que lo haremos en las pruebas y si alg\u00fan motor girar en sentido contario al esperado bastar\u00e1 con intercambiar sus conexiones de posici\u00f3n. En la imagen siguiente tenemos el conexionado de forma gr\u00e1fica. Conexionado de motores","title":"Motores DC 3 a 6V"},{"location":"conexionado-pruebas/UNO/conex/#zumbador","text":"Usamos el pin D1 o TxD y su Vcc asociado para conectarlo. En principio esta conexi\u00f3n no debe interferir en la grabaci\u00f3n de programas en la placa que siempre se realiza utilizando los pines D0 y D1 de la placa, pero si nos da alg\u00fan problema basta con que desconectemos el pin D0 del sensor en uno de sus extremos, procedamos a grabar el programa correspondiente y una vez cargado este volvemos a conectar el pin en su lugar. Si no queremos estar escuchando pitidos de manera continuada cuando subimos c\u00f3digo a la placa o cuando usamos el monitor serie tambi\u00e9n debemos desconectar esta patilla. En la imagen siguiente observamos una pareja de cables, uno blanco que va al pin D1 y uno negro que va a GND. Conexionado del zumbador","title":"Zumbador"},{"location":"conexionado-pruebas/UNO/conex/#sensores-de-infrarrojos","text":"","title":"Sensores de infrarrojos"},{"location":"conexionado-pruebas/UNO/elementos/","text":"Descripci\u00f3n de placas y sensores \u00b6 En este apartado vamos a realizar una descripci\u00f3n b\u00e1sica de las distintas placas, sensores y elementos que se utilizan en la construcci\u00f3n del robot. Placa Keyestudio UNO Ks0172 \u00b6 Se trata de la placa Ks0172 basada en Arduino UNO con el microcontrolador ATmega328P que incorpora conectores de 3 pines que incluyen la patilla asociada y la alimentaci\u00f3n y que facilita el conexionado de elementos sin necesidad de utilizar protoboard. En la imagen siguiente podemos ver esta placa con sus descripciones b\u00e1sicas y este es el enlace al archivo fuente . Placa Keyestudio UNO Ks0172 IMPORTANTE: El interruptor deslizante permite escoger entre las alimentaciones de 5V o 3.3V. En nuestro caso nos aseguraremos de que est\u00e1 en la posici\u00f3n 5V . Tambi\u00e9n es importante tener disponible un gr\u00e1fico con la funcionalidad de cada pin o diagrama pinout como el que vemos en la imagen siguiente y este es el enlace a su archivo fuente Pinout de la Placa Keyestudio UNO Ks0172 Placa Drivers L298 \u00b6 Esta placa est\u00e1 basada en el chip L298N y permite controlar la velocidad y el sentido de giro de dos motores de corriente continua o un motor paso a paso bipolar con un consumo m\u00e1ximo de dos amperios. Cuenta con diodos de protecci\u00f3n y un regulador LM7805 que suministra 5V a la parte l\u00f3gica del integrado L298N. Se disponen jumpers de selecci\u00f3n para habilitar cada una de las salidas del m\u00f3dulo (A y B). La salida A esta conformada por OUT1 y OUT2 y la salida B por OUT3 y OUT4. Los pines de habilitaci\u00f3n son ENA y ENB (Enable A y Enable B) respectivamente. En la siguiente imagen vemos esta placa con sus descripciones b\u00e1sicas y este es el enlace al archivo fuente . Placa L298 Este m\u00f3dulo con el L298N nos permite alimentar nuestro Arduino a partir de la salida de 5V con un l\u00edmite de 500 mA. Debemos tambi\u00e9n tener presente que el m\u00f3dulo entrega una tensi\u00f3n a los motores en torno a 3V menor que la tensi\u00f3n a la que lo alimentamos. Los pines Vin y GND son los de alimentaci\u00f3n del m\u00f3dulo con una tensi\u00f3n que puede ir de 3V a 35V. El pin Vlog (Vl\u00f3gico) tiene dos modos de funcionamiento dependiendo de que el jumper Regulador est\u00e9 o no colocado. Las condiciones de funcionamiento son: Jumper colocado: El regulador LM7805 est\u00e1 activado y en Vlog habr\u00e1 una tensi\u00f3n de 5V siempre que el m\u00f3dulo est\u00e9 alimentado con una tensi\u00f3n m\u00e1xima de hasta 12V. Si lo alimentamos con mas tensi\u00f3n tendremos que quitar el jumper y alimentar con 5V la l\u00f3gica del m\u00f3dulo a trav\u00e9s de este pin. Jumper sin colocar: El regulador LM7805 est\u00e1 desactivado y tenemos que alimentar la l\u00f3gica del m\u00f3dulo a trav\u00e9s de Vlog. Debemos tener \u00a1Cuidado! si introducimos corriente por Vog con el jumper de regulaci\u00f3n colocado podemos provocar da\u00f1os en el m\u00f3dulo. El resto de conexiones se utilizan para el control de motores y para el caso de motores DC su utilizaci\u00f3n es la siguiente: Salidas para motores: Entregan la energ\u00eda para mover los motores y debemos conectarlo de forma que cuando marquemos, por ejemplo, mover adelante ambos motores giren en el mismo sentido. Si no lo hacen basta con invertir la polaridad de la conexi\u00f3n. Pines IN1 a IN4: IN1 e IN2 permiten controlar el sentido de giro del motor A mientras que IN3 e IN4 lo hacen con el del motor B. En la tabla siguiente se resume el funcionamiento de estos pines. IN1 IN2 IN3 IN4 Sentido de Giro High Low High Low Directo Low High Low High Inverso Low Low Low Low Paro Velocidad de giro: Tenemos que quitar los jumpers y usar los pines ENA y ENB. Estos pines debemos conectarlos a dos salidas PWM de la placa Arduino para poder enviarle un valor entre 0 y 255 que controle la velocidad de giro. Con los jumpers colocados, los motores girar\u00e1n siempre a la misma velocidad. Motores DC 3 a 6V \u00b6 Motor de continua de 3V a 6V con doble eje y caja reductora. El doble eje facilita la colocaci\u00f3n de un encoder \u00f3ptico para realizar un control de velocidad en lazo cerrado. En la tabla siguiente se resumen los principales par\u00e1metros de estos motores con una reductora 48:1 para distintas tensiones de alimentaci\u00f3n. 3V 5V 6V Velocidad sin carga 125 rpm 200 rpm 230 rpm velocidad con carga 95 rpm 160 rpm 175 rpm Torque 7.8 Ncm 9.8 Ncm 10.8 Ncm Consumo 100 a 130 mA 120 a 140 mA 130 a 150 mA El aspecto f\u00edsico de estos motores lo vemos en la imagen siguiente. Motores DC 3 a 6V Zumbador \u00b6 Si queremos reproducir sonidos de forma sencilla y econ\u00f3mica debemos sutilizar un zumbador o buzzer pasivo como el que vemos en la imagen siguiente. Zumbador pasivo El dispositivo suele venir con una pegatina que debemos retirar para que el sonido salga con toda su potencia del mismo. Esta pegatina tiene utilidad en procesos de fabricaci\u00f3n automatizada para proteger al buzzer en la fase de lavado. Normalmente no tienen polaridad, pero si est\u00e1 marcada en la carcasa o es distinguible por la diferente longitud de los pines lo mejor es respetarla, siendo normalmente el pin marcado el positivo o patilla mas larga. El buzzer pasivo, a diferencia del activo, no tiene un oscilador interno y esto obliga a generar la frecuencia desde Arduino, para ello disponemos de la funci\u00f3n tone() que implementa el IDE. Sensores de infrarrojos \u00b6 Hemos optado por poner al robot una pareja de sensores de reflexi\u00f3n fotoel\u00e9ctrica con distancia de detecci\u00f3n ajustable entre 2 y 30cm, conocido como sensor de infrarrojos FC-51, como el que vemos en la imagen siguiente, donde se indica el potenciometro de ajuste de distancia, el diodo emisor de IR y el fototransistor o detector de reflexi\u00f3n. Modelo de sensor IR escogido Recordemos el funcionamiento b\u00e1sico del sistema. El LED infrarrojo emite luz infrarroja, o sea, de menor frecuencia (o mayor longitud de onda) que la nuestros ojos nos permiten ver, es decir, para nosotros es invisible. El sensor que hemos elegido funciona cuando esta luz choca contra una superficie negra que la reflejar\u00e1 reflejar\u00e1 y llegar\u00e1 al fototransistor. Existen muchas clases de sensores de este tipo y hemos escogido este por su amplio rango de ajuste y su posibilidad de montaje vertical. Utilizando un par de estos sensores podemos seguir una linea detectando si se sale a derecha o izquierda de la l\u00ednea y redireccionarlo de nuevo a la linea. Este sensor tiene 3 pines de conexi\u00f3n, Vcc o 5V y GND para la alimentaci\u00f3n y D0 u OUT como salida de se\u00f1al que indicar\u00e1 si est\u00e1 llegando o no el reflejo del LED al fototransistor. En el esquema de la imagen siguiente se puede estudiar el funcionamiento electr\u00f3nico de esta plaquita. Esquema sensor infrarrojos El LM393 est\u00e1 configurado como comparador entre el nivel de tensi\u00f3n ajustado mediante VR1 que es entregado al terminal inversor y el nivel de entrada en el terminal no inversor, que va a depender de si el fototransistor recibe o no reflexi\u00f3n del infrarrojo emitido por el LED, si est\u00e1 recibiendo reflexi\u00f3n el fototransistor se encender\u00e1 el LED indicador de estado y tenemos el estado bajo o LOW en D0. Si no se recibe reflexi\u00f3n el LED no se iluminar\u00e1 y se env\u00eda un estado alto o HIGH a D0. Mediante el potenci\u00f3metro ajustamos la sensibilidad del fotorreceptor. Servomotores \u00b6","title":"An\u00e1lisis de elementos"},{"location":"conexionado-pruebas/UNO/elementos/#descripcion-de-placas-y-sensores","text":"En este apartado vamos a realizar una descripci\u00f3n b\u00e1sica de las distintas placas, sensores y elementos que se utilizan en la construcci\u00f3n del robot.","title":"Descripci\u00f3n de placas y sensores"},{"location":"conexionado-pruebas/UNO/elementos/#placa-keyestudio-uno-ks0172","text":"Se trata de la placa Ks0172 basada en Arduino UNO con el microcontrolador ATmega328P que incorpora conectores de 3 pines que incluyen la patilla asociada y la alimentaci\u00f3n y que facilita el conexionado de elementos sin necesidad de utilizar protoboard. En la imagen siguiente podemos ver esta placa con sus descripciones b\u00e1sicas y este es el enlace al archivo fuente . Placa Keyestudio UNO Ks0172 IMPORTANTE: El interruptor deslizante permite escoger entre las alimentaciones de 5V o 3.3V. En nuestro caso nos aseguraremos de que est\u00e1 en la posici\u00f3n 5V . Tambi\u00e9n es importante tener disponible un gr\u00e1fico con la funcionalidad de cada pin o diagrama pinout como el que vemos en la imagen siguiente y este es el enlace a su archivo fuente Pinout de la Placa Keyestudio UNO Ks0172","title":"Placa Keyestudio UNO Ks0172"},{"location":"conexionado-pruebas/UNO/elementos/#placa-drivers-l298","text":"Esta placa est\u00e1 basada en el chip L298N y permite controlar la velocidad y el sentido de giro de dos motores de corriente continua o un motor paso a paso bipolar con un consumo m\u00e1ximo de dos amperios. Cuenta con diodos de protecci\u00f3n y un regulador LM7805 que suministra 5V a la parte l\u00f3gica del integrado L298N. Se disponen jumpers de selecci\u00f3n para habilitar cada una de las salidas del m\u00f3dulo (A y B). La salida A esta conformada por OUT1 y OUT2 y la salida B por OUT3 y OUT4. Los pines de habilitaci\u00f3n son ENA y ENB (Enable A y Enable B) respectivamente. En la siguiente imagen vemos esta placa con sus descripciones b\u00e1sicas y este es el enlace al archivo fuente . Placa L298 Este m\u00f3dulo con el L298N nos permite alimentar nuestro Arduino a partir de la salida de 5V con un l\u00edmite de 500 mA. Debemos tambi\u00e9n tener presente que el m\u00f3dulo entrega una tensi\u00f3n a los motores en torno a 3V menor que la tensi\u00f3n a la que lo alimentamos. Los pines Vin y GND son los de alimentaci\u00f3n del m\u00f3dulo con una tensi\u00f3n que puede ir de 3V a 35V. El pin Vlog (Vl\u00f3gico) tiene dos modos de funcionamiento dependiendo de que el jumper Regulador est\u00e9 o no colocado. Las condiciones de funcionamiento son: Jumper colocado: El regulador LM7805 est\u00e1 activado y en Vlog habr\u00e1 una tensi\u00f3n de 5V siempre que el m\u00f3dulo est\u00e9 alimentado con una tensi\u00f3n m\u00e1xima de hasta 12V. Si lo alimentamos con mas tensi\u00f3n tendremos que quitar el jumper y alimentar con 5V la l\u00f3gica del m\u00f3dulo a trav\u00e9s de este pin. Jumper sin colocar: El regulador LM7805 est\u00e1 desactivado y tenemos que alimentar la l\u00f3gica del m\u00f3dulo a trav\u00e9s de Vlog. Debemos tener \u00a1Cuidado! si introducimos corriente por Vog con el jumper de regulaci\u00f3n colocado podemos provocar da\u00f1os en el m\u00f3dulo. El resto de conexiones se utilizan para el control de motores y para el caso de motores DC su utilizaci\u00f3n es la siguiente: Salidas para motores: Entregan la energ\u00eda para mover los motores y debemos conectarlo de forma que cuando marquemos, por ejemplo, mover adelante ambos motores giren en el mismo sentido. Si no lo hacen basta con invertir la polaridad de la conexi\u00f3n. Pines IN1 a IN4: IN1 e IN2 permiten controlar el sentido de giro del motor A mientras que IN3 e IN4 lo hacen con el del motor B. En la tabla siguiente se resume el funcionamiento de estos pines. IN1 IN2 IN3 IN4 Sentido de Giro High Low High Low Directo Low High Low High Inverso Low Low Low Low Paro Velocidad de giro: Tenemos que quitar los jumpers y usar los pines ENA y ENB. Estos pines debemos conectarlos a dos salidas PWM de la placa Arduino para poder enviarle un valor entre 0 y 255 que controle la velocidad de giro. Con los jumpers colocados, los motores girar\u00e1n siempre a la misma velocidad.","title":"Placa Drivers L298"},{"location":"conexionado-pruebas/UNO/elementos/#motores-dc-3-a-6v","text":"Motor de continua de 3V a 6V con doble eje y caja reductora. El doble eje facilita la colocaci\u00f3n de un encoder \u00f3ptico para realizar un control de velocidad en lazo cerrado. En la tabla siguiente se resumen los principales par\u00e1metros de estos motores con una reductora 48:1 para distintas tensiones de alimentaci\u00f3n. 3V 5V 6V Velocidad sin carga 125 rpm 200 rpm 230 rpm velocidad con carga 95 rpm 160 rpm 175 rpm Torque 7.8 Ncm 9.8 Ncm 10.8 Ncm Consumo 100 a 130 mA 120 a 140 mA 130 a 150 mA El aspecto f\u00edsico de estos motores lo vemos en la imagen siguiente. Motores DC 3 a 6V","title":"Motores DC 3 a 6V"},{"location":"conexionado-pruebas/UNO/elementos/#zumbador","text":"Si queremos reproducir sonidos de forma sencilla y econ\u00f3mica debemos sutilizar un zumbador o buzzer pasivo como el que vemos en la imagen siguiente. Zumbador pasivo El dispositivo suele venir con una pegatina que debemos retirar para que el sonido salga con toda su potencia del mismo. Esta pegatina tiene utilidad en procesos de fabricaci\u00f3n automatizada para proteger al buzzer en la fase de lavado. Normalmente no tienen polaridad, pero si est\u00e1 marcada en la carcasa o es distinguible por la diferente longitud de los pines lo mejor es respetarla, siendo normalmente el pin marcado el positivo o patilla mas larga. El buzzer pasivo, a diferencia del activo, no tiene un oscilador interno y esto obliga a generar la frecuencia desde Arduino, para ello disponemos de la funci\u00f3n tone() que implementa el IDE.","title":"Zumbador"},{"location":"conexionado-pruebas/UNO/elementos/#sensores-de-infrarrojos","text":"Hemos optado por poner al robot una pareja de sensores de reflexi\u00f3n fotoel\u00e9ctrica con distancia de detecci\u00f3n ajustable entre 2 y 30cm, conocido como sensor de infrarrojos FC-51, como el que vemos en la imagen siguiente, donde se indica el potenciometro de ajuste de distancia, el diodo emisor de IR y el fototransistor o detector de reflexi\u00f3n. Modelo de sensor IR escogido Recordemos el funcionamiento b\u00e1sico del sistema. El LED infrarrojo emite luz infrarroja, o sea, de menor frecuencia (o mayor longitud de onda) que la nuestros ojos nos permiten ver, es decir, para nosotros es invisible. El sensor que hemos elegido funciona cuando esta luz choca contra una superficie negra que la reflejar\u00e1 reflejar\u00e1 y llegar\u00e1 al fototransistor. Existen muchas clases de sensores de este tipo y hemos escogido este por su amplio rango de ajuste y su posibilidad de montaje vertical. Utilizando un par de estos sensores podemos seguir una linea detectando si se sale a derecha o izquierda de la l\u00ednea y redireccionarlo de nuevo a la linea. Este sensor tiene 3 pines de conexi\u00f3n, Vcc o 5V y GND para la alimentaci\u00f3n y D0 u OUT como salida de se\u00f1al que indicar\u00e1 si est\u00e1 llegando o no el reflejo del LED al fototransistor. En el esquema de la imagen siguiente se puede estudiar el funcionamiento electr\u00f3nico de esta plaquita. Esquema sensor infrarrojos El LM393 est\u00e1 configurado como comparador entre el nivel de tensi\u00f3n ajustado mediante VR1 que es entregado al terminal inversor y el nivel de entrada en el terminal no inversor, que va a depender de si el fototransistor recibe o no reflexi\u00f3n del infrarrojo emitido por el LED, si est\u00e1 recibiendo reflexi\u00f3n el fototransistor se encender\u00e1 el LED indicador de estado y tenemos el estado bajo o LOW en D0. Si no se recibe reflexi\u00f3n el LED no se iluminar\u00e1 y se env\u00eda un estado alto o HIGH a D0. Mediante el potenci\u00f3metro ajustamos la sensibilidad del fotorreceptor.","title":"Sensores de infrarrojos"},{"location":"conexionado-pruebas/UNO/elementos/#servomotores","text":"","title":"Servomotores"},{"location":"conexionado-pruebas/UNO/test/","text":"Pruebas b\u00e1sicas de funcionamiento \u00b6 Una vez analizados y conectados los distintos elementos iremos, de forma progresiva, haciendo un peque\u00f1o programa mediante la aplicaci\u00f3n Masaylo Blockly basada en Blocklino de Fontaine Jean Philippe , y pensada para programar robots utilizando un entorno gr\u00e1fico o de programaci\u00f3n por bloques. En el apartado de software se pueden encontrar los enlaces de descarga y toda la informaci\u00f3n de la aplicaci\u00f3n. Alimentaci\u00f3n \u00b6 Colocamos las pilas AA en su lugar respetando la polaridad de las mismas y accionamos el interruptor. Si todo es correcto en ambas placas se debe encender un diodo LED rojo indicativo de que est\u00e1n alimentadas, tal y como observamos en la imagen siguiente: Primer encendido En este punto vamos a probar tambi\u00e9n que se graba correctamente firmware en la placa UNO a partir de Masaylo Blockly 1.1.1 Beta o posterior . Para ello hemos creado y almacenado el programa blink.bloc que vemos en la imagen siguiente. Programa blink.bloc Si cargamos el programa y dejamos sin accionar el interruptor observaremos como parpadea el LED asociado al pin 13 en la placa UNO pero la placa del driver no est\u00e1 alimentada y por tanto su LED permanece apagado. En la animaci\u00f3n siguiente vemos el parpadeo del LED y el resultado de accionar el interruptor. Animaci\u00f3n que muestra el funcionamiento del programa blink.bloc y del interruptor Este GIF se ha creado a partir de un video en formato mp4 utilizando FFMPEG y GIMP y la informaci\u00f3n obtenida en este enlace . Motores \u00b6 Vamos a realizar una primera prueba del funcionamiento de los motores a partir de los ejemplos suministrados con la librer\u00eda y disponibles en la aplicaci\u00f3n Masaylo Blockly que estamos usando en estas pruebas de funcionamiento. En la imagen siguiente tenemos cargado el ejemplo Aprende a controlar los movimientos b\u00e1sicos del robot Masaylo y hemos destacado el icono desde el que podemos seleccionarlo de la lista que se abre en una ventana emergente y que al hacer clic nos lo carga en el entorno de la aplicaci\u00f3n. Ejemplo Aprende a controlar los movimientos b\u00e1sicos del robot Masaylo cargado Si conectamos la placa al puerto USB del ordenador y cargamos el ejemplo en la placa, cuando accionemos el interruptor (o con este accionado pulsemos el bot\u00f3n de reset) se producir\u00e1 la secuencia de movimiento establecida en el programa que podemos apreciar en la animaci\u00f3n siguiente. Animaci\u00f3n que muestra el funcionamiento del programa motores-ej1.bloc El ejemplo siguiente est\u00e1 basado en Utiliza PWM para controlar la velocidad de movimientos del Masaylo suministrado con la aplicaci\u00f3n pero ligeramente modificado ( motores-ej2.bloc ) para poner todos los valores de PWM al 50% y todos los retardos a 3 segundos. Ejemplo con control PWM de Masaylo El funcionamiento es muy similar al de la animaci\u00f3n anterior pero a la mitad de velocidad. An\u00edmate y prueba el ejemplo y haz cambios para analizar lo que est\u00e1 ocurriendo. Zumbador \u00b6 En esta ocasi\u00f3n vamos a programar el robot desde el IDE de Arduino, en concreto utilizando la versi\u00f3n 1.8.13 o posterior. Para la prueba del zumbador vamos a utilizar la informaci\u00f3n que podemos ver en la web de Input makers con el t\u00edtulo Programar melod\u00eda de Star Wars con Arduino y zumbador . El c\u00f3digo que vamos a grabar en la placa lo vemos a continuaci\u00f3n y basta con utilizar el bot\u00f3n copiar para seleccionarlo y ponerlo en el portapapeles desde el que lo podemos llevar al IDE de Arduino. Este bot\u00f3n se hace mas visible al pasar el cursor por el cuadro del c\u00f3digo en la zona superior derecha del mismo. Tambi\u00e9n puedes descargar el programa comprimido haciendo clic en el enlace buzzer-star-wars que puedes descomprimir y utilizar a conveniencia. int pin = 1; // definimos el pin al que conectaremos el zumbador. /* Definimos cada una de las frecuencias de las notas musicales. * Cuando van acompa\u00f1adas de la letra S significa que esa nota es sostenido. * Cuando van acompa\u00f1adas de la letra H significa que esa nota est\u00e1 en una octava superior (High). */ int c=261; int d=294; int e=329; int f=349; int g=391; int gS=415; int a=440; int aS=455; int b=466; int cH=523; int cSH=554; int dH=587; int dSH=622; int eH=659; int fH=698; int fSH=740; int gH=783; int gSH=830; int aH=880; void setup() { pinMode(pin, OUTPUT); // Hacemos que el pin 1 sea salida. } void loop() { /* Utilizamos la funci\u00f3n tone incluida en el IDE con el formato: tone(N\u00ba-pin, nota, duracion) */ tone(pin, a, 500); delay(550); tone(pin, a, 500); delay(550); tone(pin, a, 500); delay(550); tone(pin, f, 350); delay(350); tone(pin, cH, 150); delay(200); tone(pin, a, 500); delay(550); tone(pin, f, 350); delay(350); tone(pin, cH, 150); delay(200); tone(pin, a, 1000); delay(1050); tone(pin, eH, 500); delay(550); tone(pin, eH, 500); delay(550); tone(pin, eH, 500); delay(550); tone(pin, fH, 350); delay(350); tone(pin, cH, 150); delay(200); tone(pin, gS, 500); delay(550); tone(pin, f, 350); delay(350); tone(pin, cH, 150); delay(200); tone(pin, a, 1000); delay(1050); tone(pin, aH, 500); delay(550); tone(pin, a, 350); delay(350); tone(pin, a, 150); delay(200); tone(pin, aH, 500); delay(550); tone(pin, gSH, 250);delay(250); tone(pin, gH, 250); delay(250); tone(pin, fSH, 125);delay(150); tone(pin, fH, 125); delay(150); tone(pin, fSH, 250);delay(250); delay(250); tone(pin, aS, 250); delay(250); tone(pin, dSH, 500);delay(550); tone(pin, dH, 250); delay(250); tone(pin, cSH, 250);delay(250); tone(pin, cH, 125); delay(150); tone(pin, b, 125); delay(150); tone(pin, cH, 250); delay(250); delay(250); tone(pin, f, 125); delay(150); tone(pin, gS, 500); delay(550); tone(pin, f, 375); delay(375+50); tone(pin, a, 125); delay(150); tone(pin, cH, 500); delay(550); tone(pin, a, 375); delay(400); tone(pin, cH, 125); delay(150); tone(pin, eH, 1000);delay(1050); tone(pin, aH, 500); delay(550); tone(pin, a, 350); delay(350); tone(pin, a, 150); delay(200); tone(pin, aH, 500); delay(550); tone(pin, gSH, 250);delay(250); tone(pin, gH, 250); delay(250); tone(pin, fSH, 125);delay(150); tone(pin, fH, 125); delay(150); tone(pin, fSH, 250);delay(250); delay(250); tone(pin, aS, 250); delay(250); tone(pin, dSH, 500);delay(550); tone(pin, dH, 250); delay(250); tone(pin, cSH, 250);delay(250); tone(pin, cH, 125); delay(150); tone(pin, b, 125); delay(150); tone(pin, cH, 250); delay(250); delay(250); tone(pin, f, 250); delay(250); tone(pin, gS, 500); delay(550); tone(pin, f, 375); delay(400); tone(pin, cH, 125); delay(150); tone(pin, a, 500); delay(550); tone(pin, f, 375); delay(400); tone(pin, c, 125); delay(150); tone(pin, a, 1000); delay(1050); delay(5000); } En el video prueba del zumbador en Masaylo-CRG podemos escuchar el resultado de grabar el c\u00f3digo anterior en el robot. Sensores de infrarrojos \u00b6","title":"Pruebas b\u00e1sicas de funcionamiento"},{"location":"conexionado-pruebas/UNO/test/#pruebas-basicas-de-funcionamiento","text":"Una vez analizados y conectados los distintos elementos iremos, de forma progresiva, haciendo un peque\u00f1o programa mediante la aplicaci\u00f3n Masaylo Blockly basada en Blocklino de Fontaine Jean Philippe , y pensada para programar robots utilizando un entorno gr\u00e1fico o de programaci\u00f3n por bloques. En el apartado de software se pueden encontrar los enlaces de descarga y toda la informaci\u00f3n de la aplicaci\u00f3n.","title":"Pruebas b\u00e1sicas de funcionamiento"},{"location":"conexionado-pruebas/UNO/test/#alimentacion","text":"Colocamos las pilas AA en su lugar respetando la polaridad de las mismas y accionamos el interruptor. Si todo es correcto en ambas placas se debe encender un diodo LED rojo indicativo de que est\u00e1n alimentadas, tal y como observamos en la imagen siguiente: Primer encendido En este punto vamos a probar tambi\u00e9n que se graba correctamente firmware en la placa UNO a partir de Masaylo Blockly 1.1.1 Beta o posterior . Para ello hemos creado y almacenado el programa blink.bloc que vemos en la imagen siguiente. Programa blink.bloc Si cargamos el programa y dejamos sin accionar el interruptor observaremos como parpadea el LED asociado al pin 13 en la placa UNO pero la placa del driver no est\u00e1 alimentada y por tanto su LED permanece apagado. En la animaci\u00f3n siguiente vemos el parpadeo del LED y el resultado de accionar el interruptor. Animaci\u00f3n que muestra el funcionamiento del programa blink.bloc y del interruptor Este GIF se ha creado a partir de un video en formato mp4 utilizando FFMPEG y GIMP y la informaci\u00f3n obtenida en este enlace .","title":"Alimentaci\u00f3n"},{"location":"conexionado-pruebas/UNO/test/#motores","text":"Vamos a realizar una primera prueba del funcionamiento de los motores a partir de los ejemplos suministrados con la librer\u00eda y disponibles en la aplicaci\u00f3n Masaylo Blockly que estamos usando en estas pruebas de funcionamiento. En la imagen siguiente tenemos cargado el ejemplo Aprende a controlar los movimientos b\u00e1sicos del robot Masaylo y hemos destacado el icono desde el que podemos seleccionarlo de la lista que se abre en una ventana emergente y que al hacer clic nos lo carga en el entorno de la aplicaci\u00f3n. Ejemplo Aprende a controlar los movimientos b\u00e1sicos del robot Masaylo cargado Si conectamos la placa al puerto USB del ordenador y cargamos el ejemplo en la placa, cuando accionemos el interruptor (o con este accionado pulsemos el bot\u00f3n de reset) se producir\u00e1 la secuencia de movimiento establecida en el programa que podemos apreciar en la animaci\u00f3n siguiente. Animaci\u00f3n que muestra el funcionamiento del programa motores-ej1.bloc El ejemplo siguiente est\u00e1 basado en Utiliza PWM para controlar la velocidad de movimientos del Masaylo suministrado con la aplicaci\u00f3n pero ligeramente modificado ( motores-ej2.bloc ) para poner todos los valores de PWM al 50% y todos los retardos a 3 segundos. Ejemplo con control PWM de Masaylo El funcionamiento es muy similar al de la animaci\u00f3n anterior pero a la mitad de velocidad. An\u00edmate y prueba el ejemplo y haz cambios para analizar lo que est\u00e1 ocurriendo.","title":"Motores"},{"location":"conexionado-pruebas/UNO/test/#zumbador","text":"En esta ocasi\u00f3n vamos a programar el robot desde el IDE de Arduino, en concreto utilizando la versi\u00f3n 1.8.13 o posterior. Para la prueba del zumbador vamos a utilizar la informaci\u00f3n que podemos ver en la web de Input makers con el t\u00edtulo Programar melod\u00eda de Star Wars con Arduino y zumbador . El c\u00f3digo que vamos a grabar en la placa lo vemos a continuaci\u00f3n y basta con utilizar el bot\u00f3n copiar para seleccionarlo y ponerlo en el portapapeles desde el que lo podemos llevar al IDE de Arduino. Este bot\u00f3n se hace mas visible al pasar el cursor por el cuadro del c\u00f3digo en la zona superior derecha del mismo. Tambi\u00e9n puedes descargar el programa comprimido haciendo clic en el enlace buzzer-star-wars que puedes descomprimir y utilizar a conveniencia. int pin = 1; // definimos el pin al que conectaremos el zumbador. /* Definimos cada una de las frecuencias de las notas musicales. * Cuando van acompa\u00f1adas de la letra S significa que esa nota es sostenido. * Cuando van acompa\u00f1adas de la letra H significa que esa nota est\u00e1 en una octava superior (High). */ int c=261; int d=294; int e=329; int f=349; int g=391; int gS=415; int a=440; int aS=455; int b=466; int cH=523; int cSH=554; int dH=587; int dSH=622; int eH=659; int fH=698; int fSH=740; int gH=783; int gSH=830; int aH=880; void setup() { pinMode(pin, OUTPUT); // Hacemos que el pin 1 sea salida. } void loop() { /* Utilizamos la funci\u00f3n tone incluida en el IDE con el formato: tone(N\u00ba-pin, nota, duracion) */ tone(pin, a, 500); delay(550); tone(pin, a, 500); delay(550); tone(pin, a, 500); delay(550); tone(pin, f, 350); delay(350); tone(pin, cH, 150); delay(200); tone(pin, a, 500); delay(550); tone(pin, f, 350); delay(350); tone(pin, cH, 150); delay(200); tone(pin, a, 1000); delay(1050); tone(pin, eH, 500); delay(550); tone(pin, eH, 500); delay(550); tone(pin, eH, 500); delay(550); tone(pin, fH, 350); delay(350); tone(pin, cH, 150); delay(200); tone(pin, gS, 500); delay(550); tone(pin, f, 350); delay(350); tone(pin, cH, 150); delay(200); tone(pin, a, 1000); delay(1050); tone(pin, aH, 500); delay(550); tone(pin, a, 350); delay(350); tone(pin, a, 150); delay(200); tone(pin, aH, 500); delay(550); tone(pin, gSH, 250);delay(250); tone(pin, gH, 250); delay(250); tone(pin, fSH, 125);delay(150); tone(pin, fH, 125); delay(150); tone(pin, fSH, 250);delay(250); delay(250); tone(pin, aS, 250); delay(250); tone(pin, dSH, 500);delay(550); tone(pin, dH, 250); delay(250); tone(pin, cSH, 250);delay(250); tone(pin, cH, 125); delay(150); tone(pin, b, 125); delay(150); tone(pin, cH, 250); delay(250); delay(250); tone(pin, f, 125); delay(150); tone(pin, gS, 500); delay(550); tone(pin, f, 375); delay(375+50); tone(pin, a, 125); delay(150); tone(pin, cH, 500); delay(550); tone(pin, a, 375); delay(400); tone(pin, cH, 125); delay(150); tone(pin, eH, 1000);delay(1050); tone(pin, aH, 500); delay(550); tone(pin, a, 350); delay(350); tone(pin, a, 150); delay(200); tone(pin, aH, 500); delay(550); tone(pin, gSH, 250);delay(250); tone(pin, gH, 250); delay(250); tone(pin, fSH, 125);delay(150); tone(pin, fH, 125); delay(150); tone(pin, fSH, 250);delay(250); delay(250); tone(pin, aS, 250); delay(250); tone(pin, dSH, 500);delay(550); tone(pin, dH, 250); delay(250); tone(pin, cSH, 250);delay(250); tone(pin, cH, 125); delay(150); tone(pin, b, 125); delay(150); tone(pin, cH, 250); delay(250); delay(250); tone(pin, f, 250); delay(250); tone(pin, gS, 500); delay(550); tone(pin, f, 375); delay(400); tone(pin, cH, 125); delay(150); tone(pin, a, 500); delay(550); tone(pin, f, 375); delay(400); tone(pin, c, 125); delay(150); tone(pin, a, 1000); delay(1050); delay(5000); } En el video prueba del zumbador en Masaylo-CRG podemos escuchar el resultado de grabar el c\u00f3digo anterior en el robot.","title":"Zumbador"},{"location":"conexionado-pruebas/UNO/test/#sensores-de-infrarrojos","text":"","title":"Sensores de infrarrojos"}]}